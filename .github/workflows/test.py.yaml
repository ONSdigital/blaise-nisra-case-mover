name: Test coverage report

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  permissions:
    contents: read
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.13 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: pip install poetry
      - name: Install dependencies
        run: poetry install --no-root
      - name: Run black
        run: poetry run black --check .
      - name: Run isort
        run: poetry run isort --check .

  check-types:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.13 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: pip install poetry
      - name: Install dependencies
        run: poetry install --no-root
      - name: Run mypy
        run: poetry run mypy .

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.13]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      run: pip install poetry
    - name: Install dependencies
      run: poetry install --no-root
    - name: Run pytest
      run: poetry run pytest --cov=./ tests/*
    - name: Run codecov
      run: poetry run coverage xml -i
    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
